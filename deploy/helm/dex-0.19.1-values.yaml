image:
  # -- Name of the image repository to pull the container image from.
  repository: ghcr.io/dexidp/dex
  tag: "v2.41.1"
  # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images) for updating already existing images on a node.
  pullPolicy: IfNotPresent

imagePullSecrets: []


envVars:
  - name: DEX_API_CONNECTORS_CRUD
    value: "true"


grpc:
  # -- Enable the gRPC endpoint.
  # Read more in the [documentation](https://dexidp.io/docs/api/).
  enabled: true

service:
  # -- Annotations to be added to the service.
  annotations: {}

  # -- Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  type: ClusterIP

  # -- Internal cluster service IP (when applicable)
  clusterIP: ""

  ports:
    http:
      # -- HTTP service port
      port: 5556

      # -- (int) HTTP node port (when applicable)
      #nodePort: 
    grpc:
      # -- gRPC service port
      port: 5557

      # -- (int) gRPC node port (when applicable)
      nodePort:

ingress:
  # -- Enable [ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/).
  enabled: true

  # -- Ingress [class name](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class).
  className: "nginx"

  # -- Annotations to be added to the ingress.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  # -- Ingress host configuration.
  # @default -- See [values.yaml](values.yaml).
  hosts:
    - host: dex.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific

  # -- Ingress TLS configuration.
  # @default -- See [values.yaml](values.yaml).
  tls: 
    - secretName: dex-example-tls
      hosts:
        - ex.example.com


config:
  oauth2:
    skipApprovalScreen: true
  issuer: https://dex.example.com/dex
  storage:
    type: memory
  connectors:
  - type: ldap
    name: OpenLDAP
    id: ldap
    config:
      # The following configurations seem to work with OpenLDAP:
      #
      # 1) Plain LDAP, without TLS:
      host: your-openldap-host:389
      insecureNoSSL: true
 
      # This would normally be a read-only user.
      bindDN: cn=admin,dc=example,dc=org
      bindPW: yourpassword

      usernamePrompt: UserName

      userSearch:
        baseDN: dc=example,dc=org
        filter: "(objectClass=inetOrgPerson)"
        username: uid
        # "DN" (case sensitive) is a special attribute name. It indicates that
        # this value should be taken from the entity's DN not an attribute on
        # the entity.
        idAttr: DN
        emailAttr: mail
        nameAttr: uid

      groupSearch:
        baseDN: dc=example,dc=org
        filter: "(objectClass=groupOfNames)"

        userMatchers:
          # A user is a member of a group when their DN matches
          # the value of a "member" attribute on the group entity.
        - userAttr: DN
          groupAttr: member

        # The group name should be the "cn" value.
        nameAttr: cn

  staticClients:
  - id: go-file-server-id
    redirectURIs:
    - 'https://file.example.com/login/callback'
    name: 'go-file-server'
    secret: ZXhhbXBsZS1hcHAtc2VjcmV0
